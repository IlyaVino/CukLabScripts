% This file constains unit tests for the transientSpectra class and 
% overriden methods in its subclasses

%% constructor tests
% construct default fsrs object
myFSRS = fsrs();

% NOTE FOR TEST DATA: I've dropped the timestamp in the file name so that 
% actual data is unique and does not get confused with test data while scripting

% load live tweaking gs FSRS data from a fsrs object
myGsFsrs = myFSRS.loadPath('OC_sample_1sp_GSraman_slit_closed.mat');

% load acquisition gs FSRS data from a fsrs object
myGsFsrs = myFSRS.loadPath('Sample_OC_D2O.mat');

% load acquisiton gs data acquired by an older version of the acquisition
% program (todo: add git SHA)
myGsFsrs = myFSRS.loadPath('Sample_None_Methanol.mat');

% load TR data acquired as part of a FSRS data set from a fsrs object
[myGsFsrs, myEsFsrs, myTR] = myFSRS.loadPath('Sample_BSP_Air.mat');
% only myTR should contain data: (todo implement equal methods)
%assert(myGsFsrs == fsrs(),'myGsFsrs is not a default fsrs object');
%assert(myEsFsrs == fsrs(),'myGsFsrs is not a default fsrs object');
%assert(myTR ~= fsrs(),'myTR is empty');

% load TR data acquired as part of a FSRS data set from a fsrs object using
% an alternative call method
[myGsFsrs, myEsFsrs, myTR] = loadPath(fsrs(),'Sample_BSP_Air.mat');

%% plotSpectra tests on a FSRS acquired TR data set (probe chirp test)
%load a TR data set that contains many delays but one repeat and one grating position:
[~,~,myTR] = loadPath(fsrs(),'22-01-07_14h18m15s_Sample_BSP_Air.mat');

% plot all TR spectra data using the default options for plotSpectra()
figure;
myTR.plotSpectra();

% plot all TR spectra without the legend
figure;
myTR.plotSpectra('no legend');

% plot a delay subset of TR spectra in the delay vector. The option change
% uses a name-value pair
figure;
myTR.plotSpectra('delays',[0,0.5,1]+145.6);

% test if plotSpectra correctly removes non-unique delays
figure;
myTR.plotSpectra('delays',[0,0.001,0.5,1]+145.6);

% test if plotSpectra passes extra parameters to plot. '-k' is an otpional
% imput for plot() that tells to plot black solid lines
figure;
myTR.plotSpectra('delays',[0,0.5,1]+145.6,'-k');

%% test default plotSpectra beh
%load a test data set (live tweaking)
myFSRS = loadPath(fsrs(),'22-01-26_12h18m54sOC_sample_1sp_GSraman_slit_closed.mat');

% plot all FSRS spectra in live tweaking data
figure;
myFSRS.plotSpectra('no legend');
ylim([-5 10]);

%% plotTrace tests
%load a test data set (acquisition)
[~,~,myTR] = loadPath(fsrs(),'22-01-07_14h18m15s_Sample_BSP_Air.mat');

figure;
myTR.plotTrace('wavelengths',[380,400,420,440]);
xlim([145 147]);

figure;
myTR.plotTrace('wavelengths',[350:5:500],'no legend');